// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"took/video/video/rpc/internal/logic"
	"took/video/video/rpc/internal/svc"
	"took/video/video/rpc/types/video"
)

type VideoServiceServer struct {
	svcCtx *svc.ServiceContext
	video.UnimplementedVideoServiceServer
}

func NewVideoServiceServer(svcCtx *svc.ServiceContext) *VideoServiceServer {
	return &VideoServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServiceServer) GetVideo(ctx context.Context, in *video.FeedRequest) (*video.FeedResponse, error) {
	l := logic.NewGetVideoLogic(ctx, s.svcCtx)
	return l.GetVideo(in)
}

func (s *VideoServiceServer) PublishList(ctx context.Context, in *video.PublishListRequest) (*video.PublishListResponse, error) {
	l := logic.NewPublishListLogic(ctx, s.svcCtx)
	return l.PublishList(in)
}

func (s *VideoServiceServer) GetCommentList(ctx context.Context, in *video.CommentListRequest) (*video.CommentListResponse, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}

func (s *VideoServiceServer) CommentAction(ctx context.Context, in *video.CommentActionRequest) (*video.CommentActionResponse, error) {
	l := logic.NewCommentActionLogic(ctx, s.svcCtx)
	return l.CommentAction(in)
}

func (s *VideoServiceServer) FavoriteList(ctx context.Context, in *video.FavoriteListRequest) (*video.FavoriteListResponse, error) {
	l := logic.NewFavoriteListLogic(ctx, s.svcCtx)
	return l.FavoriteList(in)
}

func (s *VideoServiceServer) FavoriteAction(ctx context.Context, in *video.FavoriteActionRequest) (*video.FavoriteActionResponse, error) {
	l := logic.NewFavoriteActionLogic(ctx, s.svcCtx)
	return l.FavoriteAction(in)
}
