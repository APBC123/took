syntax = "v1"

type Response {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type Video {
	Id            int64  `json:"id,omitempty"`
	Author        User   `json:"author"`
	PlayUrl       string `json:"play_url,omitempty"`
	CoverUrl      string `json:"cover_url,omitempty"`
	FavoriteCount int64  `json:"favorite_count"`
	CommentCount  int64  `json:"comment_count"`
	Title         string `json:"title,omitempty"`
	IsFavorite    bool   `json:"is_favorite"`
}

type User {
	Id              int64  `json:"id"`
	Username        string `json:"name"`
	FollowCount     int64  `json:"follow_count,omitempty"`
	FollowerCount   int64  `json:"follower_count,omitempty"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar,omitempty"`
	BackgroundImage string `json:"background_image,omitempty"`
	Signature       string `json:"signature,omitempty"`
	TotalFavorited  int64  `json:"total_favorited,omitempty"`
	WorkCount       int64  `json:"work_count,omitempty"`
	FavoriteCount   int64  `json:"favorite_count,omitempty"`
}

type FriendUser {
	User
	Message string `json:"message,omitempty"`
	MsgType int64  `json:"msgType"`
}

// 用户注册
type (
	RegisterReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	RegisterResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}
)

// 用户登录
type (
	LoginReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}
)

// 获取用户信息
type (
	UserInfoReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	UserInfoResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		User       User   `json:"user"`
	}
)

// 关注操作
type (
	FollowReq {
		Token      string `form:"token"`
		ToUserId   int64  `form:"to_user_id"`
		ActionType int32  `form:"action_type"`
	}

	FollowResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
	}
)

// 获取关注列表
type (
	FollowListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FollowListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserList   []User `json:"user_list"`
	}
)

// 获取粉丝列表
type (
	FollowerListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FollowerListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserList   []User `json:"user_list"`
	}
)

// 获取好友列表
type (
	FriendListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FriendListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserList   []User `json:"user_list"`
	}
)

type FeedResponse {
	Response
	VideoList []Video `json:"video_list,omitempty"`
	NextTime  int64   `json:"next_time"`
}

type FeedRequest {
	LatestTime int64  `json:"latest_time,optional"`
	Token      string `json:"token,optional"`
}

type PublishRequest {
	Token    string `form:"token,optional"`
	Title    string `form:"title,optional"`
	PlayUrl  string `form:"play_url,optional"`
	CoverUrl string `form:"cover_url,optional"`
}

type PublishResponse {
	Response
}

type PublishListRequest {
	Token  string `form:"token,optional"`
	UserId int64  `form:"user_id"`
}

type PublishListResponse {
	Response
	VideoList []Video `json:"video_list"`
}

type CommentListRequest {
	Token   string `form:"token,optional"`
	VideoId int64  `form:"video_id,omitempty"`
}

type Comment {
	Id         int64  `json:"id"`
	User       User   `json:"user"`
	Content    string `json:"content"`
	CreateDate string `json:"create_date"`
}

type CommentListResponse {
	StatusCode  int32     `json:"status_code"`
	StatusMsg   string    `json:"status_msg,optional"`
	CommentList []Comment `json:"comment_list,omitempty"`
}

type CommentActionRequest {
	Token       string `form:"token"`
	VideoId     int64  `form:"video_id"`
	ActionType  int32  `form:"action_type"`
	CommentText string `form:"comment_text,optional"`
	CommentId   int64  `form:"comment_id,optional"`
}

type CommentActionResponse {
	Response
	Comment *Comment `json:"comment"`
}

type FavoriteListRequest {
	UserId int64  `form:"user_id"`
	Token  string `form:"token,optional"`
}

type FavoriteListResponse {
	Response
	VideoList []Video `json:"video_list"`
}

type FavoriteActionRequest {
	Token      string `form:"token,optional"`
	VideoId    int64  `form:"video_id"`
	ActionType int32  `form:"action_type"`
}

type FavoriteActionResponse {
	Response
}

type Message {
	Id         int64  `json:"id"`
	ToUserId   int64  `json:"to_user_id"`
	FromUserId int64  `json:"from_user_id"`
	CreateTime string `json:"create_time"`
	Content    string `json:"content"`
}

type ChatMessageRequest {
	Token    string `form:"token"`
	ToUserId int64  `form:"to_user_id"`
}

type ChatMessageResponse {
	Response
	MessageList []Message `json:"message_list"`
}

service core-api {
	@handler GetVideo
	get /douyin/feed(FeedRequest) returns(FeedResponse)
	
	@handler PublishVideo
	post /douyin/publish/action(PublishRequest) returns(PublishResponse)
	
	@handler PublishList
	get /douyin/publish/list(PublishListRequest) returns(PublishListResponse)
	
	@handler GetCommentList
	get /douyin/comment/list(CommentListRequest) returns(CommentListResponse)
	
	@handler CommentAction
	post /douyin/comment/action(CommentActionRequest) returns(CommentActionResponse)
	
	@handler FavoriteList
	get /douyin/favorite/list(FavoriteListRequest) returns(FavoriteListResponse)
	
	@handler FavoriteAction
	post /douyin/favorite/action(FavoriteActionRequest) returns(FavoriteActionResponse)
	
	@handler GetChatMessage
	get /douyin/message/chat(ChatMessageRequest) returns(ChatMessageResponse)
}

service core-api {
	@handler Register
	post /douyin/user/register(RegisterReq) returns(RegisterResp)
	
	@handler Login
	post /douyin/user/login(LoginReq) returns(LoginResp)
	
	@handler GetUserInfo
	get /douyin/user(UserInfoReq) returns(UserInfoResp)
	
	@handler Follow
	post /douyin/relation/action(FollowReq) returns(FollowResp)
	
	@handler GetFollowList
	get /douyin/relation/follow/list(FollowListReq) returns(FollowListResp)
	
	@handler GetFollowerList
	get /douyin/relation/follower/list(FollowerListReq) returns(FollowerListResp)
	
	@handler GetFriendList
	get /douyin/relation/friend/list(FriendListReq) returns(FriendListResp)
}