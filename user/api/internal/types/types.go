// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	Id              int64  `json:"id"`
	Username        string `json:"name"`
	FollowCount     int64  `json:"follow_count,optional"`
	FollowerCount   int64  `json:"follower_count,optional"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar,optional"`
	BackgroundImage string `json:"background_image,optional"`
	Signature       string `json:"signature,optional"`
	TotalFavorited  int64  `json:"total_favorited,optional"`
	WorkCount       int64  `json:"work_count,optional"`
	FavoriteCount   int64  `json:"favorite_count,optional"`
}

type FriendUser struct {
	User
	Message string `json:"message,optional"`
	MsgType int64  `json:"msgType"`
}

type RegisterReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserId     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type LoginReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserId     int64  `json:"user_id"`
	Token      string `json:"token"`
}

type UserInfoReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type UserInfoResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	User       User   `json:"user"`
}

type FollowReq struct {
	Token      string `form:"token"`
	ToUserId   int64  `form:"to_user_id"`
	ActionType int32  `form:"action_type"`
}

type FollowResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type FollowListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FollowListResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserList   []User `json:"user_list"`
}

type FollowerListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FollowerListResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserList   []User `json:"user_list"`
}

type FriendListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FriendListResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserList   []User `json:"user_list"`
}
