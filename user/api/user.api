syntax = "v1"

type User {
	Id              int64  `json:"id"`
	Username        string `json:"name"`
	FollowCount     int64  `json:"follow_count,omitempty"`
	FollowerCount   int64  `json:"follower_count,omitempty"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar,omitempty"`
	BackgroundImage string `json:"background_image,omitempty"`
	Signature       string `json:"signature,omitempty"`
	TotalFavorited  int64  `json:"total_favorited,omitempty"`
	WorkCount       int64  `json:"work_count,omitempty"`
	FavoriteCount   int64  `json:"favorite_count,omitempty"`
}

type FriendUser {
	Id              int64  `json:"id"`
	Username        string `json:"name"`
	FollowCount     int64  `json:"follow_count,omitempty"`
	FollowerCount   int64  `json:"follower_count,omitempty"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar,omitempty"`
	BackgroundImage string `json:"background_image,omitempty"`
	Signature       string `json:"signature,omitempty"`
	TotalFavorited  int64  `json:"total_favorited,omitempty"`
	WorkCount       int64  `json:"work_count,omitempty"`
	FavoriteCount   int64  `json:"favorite_count,omitempty"`
	Message         string `json:"message,omitempty"`
	MsgType         int64  `json:"msgType"`
}

// 用户注册
type (
	RegisterReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	RegisterResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}
)

// 用户登录
type (
	LoginReq {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}
)

// 获取用户信息
type (
	UserInfoReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	UserInfoResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		User       User   `json:"user"`
	}
)

// 关注操作
type (
	FollowReq {
		Token      string `form:"token"`
		ToUserId   int64  `form:"to_user_id"`
		ActionType int32  `form:"action_type"`
	}

	FollowResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
	}
)

// 获取关注列表
type (
	FollowListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FollowListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserList   []User `json:"user_list"`
	}
)

// 获取粉丝列表
type (
	FollowerListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FollowerListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserList   []User `json:"user_list"`
	}
)

// 获取好友列表
type (
	FriendListReq {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	FriendListResp {
		StatusCode int32        `json:"status_code"`
		StatusMsg  string       `json:"status_msg,omitempty"`
		UserList   []FriendUser `json:"user_list"`
	}
)

service user-api {
	@handler Register
	post /douyin/user/register(RegisterReq) returns(RegisterResp)
	
	@handler Login
	post /douyin/user/login(LoginReq) returns(LoginResp)
	
	@handler GetUserInfo
	get /douyin/user(UserInfoReq) returns(UserInfoResp)
	
	@handler Follow
	post /douyin/relation/action(FollowReq) returns(FollowResp)
	
	@handler GetFollowList
	get /douyin/relation/follow/list(FollowListReq) returns(FollowListResp)
	
	@handler GetFollowerList
	get /douyin/relation/follower/list(FollowerListReq) returns(FollowerListResp)
	
	@handler GetFriendList
	get /douyin/relation/friend/list(FriendListReq) returns(FriendListResp)
}