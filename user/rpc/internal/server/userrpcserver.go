// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"took/user/rpc/internal/logic"
	"took/user/rpc/internal/svc"
	"took/user/rpc/types/user"
)

type UserRPCServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserRPCServer
}

func NewUserRPCServer(svcCtx *svc.ServiceContext) *UserRPCServer {
	return &UserRPCServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRPCServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserRPCServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserRPCServer) GetUserInfo(ctx context.Context, in *user.UserInfoReq) (*user.UserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserRPCServer) Follow(ctx context.Context, in *user.FollowReq) (*user.FollowResp, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *UserRPCServer) GetFollowList(ctx context.Context, in *user.FollowListReq) (*user.FollowListResp, error) {
	l := logic.NewGetFollowListLogic(ctx, s.svcCtx)
	return l.GetFollowList(in)
}

func (s *UserRPCServer) GetFollowerList(ctx context.Context, in *user.FollowerListReq) (*user.FollowerListResp, error) {
	l := logic.NewGetFollowerListLogic(ctx, s.svcCtx)
	return l.GetFollowerList(in)
}

func (s *UserRPCServer) GetFriendList(ctx context.Context, in *user.FriendListReq) (*user.FriendListResp, error) {
	l := logic.NewGetFriendListLogic(ctx, s.svcCtx)
	return l.GetFriendList(in)
}
